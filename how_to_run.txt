
🚀 Python LangChain QA App with Next.js Frontend
===============================================

This guide walks you through setting up a Python backend with FastAPI and a Next.js frontend.

📁 Folder Structure
--------------------
cs6320_project/
├── backend/
│   ├── main.py
│   ├── .env
│   ├── python-3.13-docs-text.zip
│   └── venv/
└── frontend/
    └── app/
        └── page.tsx

🛠 Backend Setup (FastAPI + LangChain)
-------------------------------------

1. Open terminal and navigate to your project:
   cd "C:\Users\<your_username>\OneDrive\Documents\UTDallas\Spring 2025\CS 6320\cs6320_project"

2. Create the backend folder if you haven’t already:
   mkdir backend
   cd backend

3. Set up virtual environment:
   python -m venv venv
   Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

   .\venv\Scripts\activate

4. Install required dependencies:
   pip install fastapi uvicorn langchain langchain-openai openai faiss-cpu python-dotenv load_dotenv langchain-community pytesseract pillow python-multipart

5. Place your ZIP file `python-3.13-docs-text.zip` inside the `backend/` folder.

6. Option 1 (Recommended): Create a `.env` file and add your OpenAI API key:

   File: backend/.env
   -------------------------------------
   OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
   -------------------------------------

   OR

   Option 2 (Quick run): Use this command to export the API key and start the server:

   PowerShell:
   -------------------------------------
   $env:OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" ; uvicorn main:app --reload

   Now for this project, please downgrade your numpy version, numpy 2.0 will cause error
   install numpy using this command: -> "pip install "numpy<2.0"
   
   make sure you download tesseract using this link https://github.com/UB-Mannheim/tesseract/wiki
      import this into your main.py 
      import pytesseract
      pytesseract.pytesseract.tesseract_cmd = r"C:\Program Files\Tesseract-OCR\tesseract.exe"
      after downloading, make sure you add the tesseract path to your system variable 
      Press Windows + S, search for "Environment Variables"
      Click "Edit the system environment variables"
      In the System Properties window, click "Environment Variables..."
      Under System variables, scroll and select Path, then click Edit
      In the window that opens, click New
      Paste this path C:\Program Files\Tesseract-OCR\
      open your terminal and verify the path by command "tesseract --version

   -------------------------------------

7. Start the backend:
   uvicorn main:app --reload

➡️ Backend will be available at: http://127.0.0.1:8000

🧑‍🎨 Frontend Setup (Next.js)
-----------------------------

1. Open a new terminal and navigate to the root folder:
   cd "C:\Users\<your_username>\OneDrive\Documents\UTDallas\Spring 2025\CS 6320\cs6320_project"

2. Create the Next.js app:
   npx create-next-app@latest frontend --typescript --app

   Choose:
   - Tailwind CSS: Yes
   - src/: No
   - Turbopack: No
   - Customize aliases: No

3. Move into the app and install Axios:
   cd frontend
   npm install
   npm install axios

4. Replace the content in `app/page.tsx` with this chat UI code:

   (provided separately or copy-paste from setup guide)

5. Start the frontend:
   npm run dev

➡️ Frontend will be available at: http://localhost:3000

✅ You can now ask questions from the browser, and they’ll be answered using the local Python docs.

🧼 Optional (Fix LangChain Warnings)
------------------------------------
To remove LangChain deprecation warnings, update your imports in `main.py`:

- from langchain.embeddings → from langchain_openai import OpenAIEmbeddings
- from langchain.chat_models → from langchain_openai import ChatOpenAI

Also install the updated package:
   pip install -U langchain-openai

🧠 Tip: Your backend already includes memory to track conversation history.



after you have finished setting these up: 
- Make sure to have two terminal
   - one terminal with backend directory running this command: 
      - $env:OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" ; uvicorn main:app --reload
   - one terminal with front end directory npm run dev 

- the local link will be: http://localhost:3000
- network link: http://192.168.1.230:3000
- you can go to any link and try out the bot


